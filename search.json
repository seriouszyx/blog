[{"title":"最新超详细 VMware 的下载与安装","url":"/2021/05/30/vmware-download-and-install/","content":"\n我的 CSDN 站点上破 50w 浏览量的 [VMware 安装教程](https://blog.csdn.net/qq_40950957/article/details/80467513)，由于 CSDN 文章中发现写有激活码审核不通过，所以将其放于本独立博客站点。\n\n<!--more-->\n\n## VMware 下载\n\n进入官网的 [VMware Workstation Pro 页面](https://www.vmware.com/cn/products/workstation-pro.html)，浏览功能特性、应用场景、系统要求等。下滑页面点击 `试用 Workstation 16 Pro` 下方的下载链接，跳转至[下载页面](https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html)。\n\n![](/assets/posts/vmware-download-and-install/1.png)\n\n在下载页面中下滑，根据操作系统选择合适的产品，在这里以 Windows10 系统为例，选择  `Workstation 16 Pro for Windows`，开始下载安装文件。\n\n![](/assets/posts/vmware-download-and-install/2.png)\n\n## VMware 安装\n\n打开下载好的 `.exe` 文件， 即可开始安装。\n\n![](/assets/posts/vmware-download-and-install/3.png)\n\n安装位置默认在 C 盘下，在这里我选择安装在 D 盘，安装路径尽量不要有中文。可勾选 `增强型键盘驱动程序` ，此功能可更好地处理国际键盘和带有额外按键的键盘。\n\n![](/assets/posts/vmware-download-and-install/4.png)\n\n一直点击 `下一步` 等待软件安装完成。 \n\n![](/assets/posts/vmware-download-and-install/5.png)\n\n安装成功后点击 `许可证` 输入密钥激活软件。\n\n![](/assets/posts/vmware-download-and-install/6.png)\n\n下面是一些网上搜集的可用密钥，复制到文本框中点击 `输入`。\n\n- VMware Workstation Pro 16\n    - ZF3R0-FHED2-M80TY-8QYGC-NPKYF\n- VMware Workstation Pro 15\n    - FG78K-0UZ15-085TQ-TZQXV-XV0CD\n    - ZA11U-DVY97-M81LP-4MNEZ-X3AW0\n    - YU102-44D86-48D2Z-Z4Q5C-MFAWD\n\n![](/assets/posts/vmware-download-and-install/7.png)\n\n安装后可能要求重启系统，重启后进入软件。依次点击导航栏中的 `帮助 -> 关于 VMware Workstation` ，查看许可证信息的状态，如下图所示即为激活成功。\n\n![](/assets/posts/vmware-download-and-install/8.png)","tags":["软件安装"]},{"title":"服务器内网穿透","url":"/2021/02/14/expose-local-server/","content":"\n本科 AI 实验室的服务器在内网部署，疫情期间大家都没办法在学校，又需要使用 GPU 完成一些工作。正好老板又添置了一台服务器，派我做一下内网穿透，方便远程使用。\n\n<!--more-->\n\n# 服务器配置\n\n\n主要想记录一下软件方面的配置，所以怎么安装滑轨、怎么接线这类问题就不赘述了，下面的表格中记录了两台服务器的软硬件配置。\n\n\n\n|  | server1 | server2 |\n| --- | --- | --- |\n| GPU | Tesla V100 16G×2 | Quadro RTX 6000 24G×2 |\n| CPU | Intel Xeon Gold 5117 @ 2.00GHz | Intel Xeon Gold 6240R @ 2.40GHz |\n| 内存 | 128G | 128G |\n| 硬盘 | 20TB | 24TB |\n| 操作系统 | Ubuntu 18.04 LTS | Ubuntu 18.04 LTS |\n\n\n\n# 内网穿透\n\n\n上述两台服务器都在学院机房里，此局域网的限制很大，甚至学校提供的 VPN 都无法访问，必须要在学院内部的网络才能访问。当用户在宿舍或者校外，是没有官方提供的代理工具来连接服务器的，所以就需要一台公网服务器做转发，用户通过公网 ip 来访问内网的服务器，这就需要内网穿透技术。\n\n\n市面上有一些成熟的内网穿透软件，如花生壳、蒲公英等，但免费版本大多有带宽限制，且速度极慢，无法正常使用。然而这些软件底层或多或少都依赖 [frp](https://github.com/fatedier/frp)，一款专注于内网穿透的高性能反向代理应用，支持多种协议，可以安全的将内网服务通过公网 ip 节点的中转暴露到公网。\n\n\n经调研后发现，frp 原生支持端口复用，也就是多个服务通过同一个服务端端口暴露。这样可以使用一台公网服务器同时代理两台内网服务，通过不同外网端口访问不同的内网服务。\n\n\nfrp 的安装包在 [GitHub ](https://github.com/fatedier/frp/releases)上，值得注意的是，要想使 frp 正常工作，必须在不同服务器上下载相同版本的 frp 包。\n\n\n## 服务端设置\n\n\n> frp 的服务端是进行中转的公网服务器，具有独立的公网 ip。\n\n\n\n下载解压 frp 包，我一般放置在 `/usr/local/frp/` 目录下，编辑服务端配置文件 `frps.ini` 。\n\n\n```bash\n[common]\nbind_port = 7000\nvhost_http_port = 8899\n```\n\n\n其中：\n\n\n- “bind_port”表示用于客户端和服务端连接的端口，这个端口号我们之后在配置客户端的时候要用到。\n- “vhost_http_port”和“vhost_https_port”用于反向代理 HTTP 主机时使用，本文不涉及 HTTP 协议，因而照抄或者删除这条均可。\n\n\n\n编辑完成后即可保存，运行服务端应用。\n\n\n```bash\n./frps -c frps.ini\n```\n\n\n此时的服务端仅运行在前台，如果 `Ctrl+C` 停止或者关闭 SSH 窗口后，frps 均会停止运行，因而我们使用 [nohup 命令](https://www.runoob.com/linux/linux-comm-nohup.html)将其运行在后台。\n\n```bash\nnohup ./frps -c frps.ini &\n```\n\n\n至此，服务端即设置完成，你可以关闭SSH窗口了。\n\n## 客户端配置\n\n\n> frp 的客户端是真正想要访问的内网服务器。\n\n\n\n同样下载解压好 frp 软件，注意版本的统一，编辑两台客户端配置文件 `frpc.ini`。\n\n\n```bash\n[common]\nserver_addr = 39.106.21.214\nserver_port = 7000\n \n[ssh]\ntype = tcp\nlocal_ip = 172.10.1.185\nlocal_port = 22\nremote_port = 6666\n```\n\n\n```bash\n[common]\nserver_addr = 39.106.21.214\nserver_port = 7000\n\n[ssh1]\ntype = tcp\nlocal_ip = 172.10.1.184\nlocal_port = 22\nremote_port = 6667\n```\n\n\n其中：\n\n\n- “server_addr”为服务端 ip 地址，填入即可。\n- “server_port”为服务器端口，填入你设置的端口号即可，如果未改变就是7000。\n- “[xxx]”表示一个规则名称，自己定义，便于查询即可。\n- “type”表示转发的协议类型，有 TCP 和 UDP 等选项可以选择，如有需要请自行查询 frp 手册。\n- “local_port”是本地应用的端口号，按照实际应用工作在本机的端口号填写即可。\n- “remote_port”是该条规则在服务端开放的端口号，自己填写并记录即可。\n\n\n\n配置好后可以使用同样的方法后台运行客户端程序。\n\n\n```bash\nnohup ./frpc -c frpc.ini &\n```\n\n\n# 服务链架构\n\n\n下面是整个 frp 服务链的架构（图中 ip 及端口号皆为模拟值）：\n\n\n![frp 架构](/assets/posts/expose-local-server/image.png)\n\n\n实线代表直接网络连接，虚线代表虚拟网络连接。在内网服务器（frpc）中配置的 `remote_port` 将在启动后向公网服务器（frps）发送（通过7000端口）注册信息，发送成功后，公网服务器开始监听6666和6667两个端口。\n\n\n在实际访问时，直接在 SSH 客户端输入公网服务器的 ip 地址，通过6666和6667两个端口号控制访问两台内网服务器，而其中的 `server_port` 、 `server_addr` 、 `local_ip` 和 `local_port` 等信息对用户透明，简单方便。\n\n\n> 参考：\n> - [使用frp进行内网穿透](https://sspai.com/post/52523)\n> - [frp issues 174](https://github.com/fatedier/frp/issues/174)\n\n\n\n\n"},{"title":"一个人的字幕组","url":"/2021/02/04/subtitle-group-for-one-person/","content":"\n\n# 也想成为字幕组\n\n\n我不是很懂当代流量的导向，人们到底乐意为怎样的内容驻足，是我很困惑的问题，就像我的 CSDN 最高互动量是一篇很简单的 VMware 安装教程，我的 GitHub 最高 star 数是只进行了几周的 CS61B 课程实验。它们算不上我心目中内容产出最高的两位，却被大众普遍接受，唯一的共同点可能是门槛较低、需求较广。然而，对于这些可能是互联网上占比最大的群体，现有的资源鱼龙混杂，多少内容靠着标题吸引流量，看完后才发现是贩卖焦虑、治标不治本。所以，我想为这种情况的改变做出点贡献。\n\n\n我搜索着 CS61B 的国内生态，这门完全公开、享誉世界的数据结构神课，虽在知乎、一亩三分地等处推荐强烈，但实际高质量完成的人数稀少。这要归因于语言和网络的阻碍，机翻字幕味同嚼蜡，YouTube 的访问也劝退了一大批初学者。于是我便有了方向，我决意用自己闲暇的时光，化身一个人的字幕组，翻译出这门课的所有视频资料，并搬运到 B 站。\n\n\n这两天，我调研了相关的工具，考虑了一些取舍，这期间实为不易，总结出一套满意的工作流，记录于此。\n# 工作流\n## 片源\n视频源在 Josh Hug 的[播放列表](https://www.youtube.com/channel/UC7FzTMO4rKvlqIyU5vwzFKQ/playlists)中，他把每周的视频整理成一个列表，下载最高画质我比较喜欢用 [y2mate](https://www.y2mate.com/)，甚至可以提取出音频文件。字幕提取 [downsub](https://downsub.com/) 挺不错的，直接下载 srt 格式，CS61B 2018 Spring 这个版本的视频有自带的 CC 字幕，但是时间轴还是有点奇怪，需要自己调整一下。如果有字幕文件格式转换的需求，我一般使用 [subtitle-converter](https://gotranscript.com/subtitle-converter)。\n## 打轴\n这一步就开始麻烦起来了，简单解释起来就是把每一句轴对准。此外还要考虑断句，要简单读一下每句的意思，以便后期翻译。最后，下载的英文字幕可能有出错的地方，发现也要纠正一下。\n\n\n具体的操作我参考的[【Aegisub教程】快速打轴法](https://www.bilibili.com/video/BV1ps411b7as)。将字幕和对应的视频文件导入 [Aegisub](https://github.com/Aegisub/Aegisub)，只显示音频和字幕。左手放置在 SDFG 四个键位上，控制每句话的播放、确认等操作，我还把时间轴合并设置了热键，因为原版断句很多太细碎了。右手操纵鼠标左右键，控制每段时间轴的开始和结束位置，特别注意 Josh Hug 经常有一些语气词，我一般不把它们包含在轴内。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/1.png)\n## 初翻\n我习惯用 [Tern](https://zh.tern.1c7.me/) 先初次翻译一下，导入单语字幕后会自动机翻并生成双语字幕。因为英文的时间轴已经调整过了，断句肯定要比原版更好，即便是机翻也不会像 YouTube CC 机翻那么生硬。在软件设置里修改一下输出格式，原文译文分成两行，原文全部在前，译文全部在后。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/2.png)\n\n\nsrt 是标准的外轨字幕，没有样式和动画，我倾向设置样式，加重中文的显示效果。Aegisub 有样式管理器，我的样式基于 Crash Course 字幕组的[公开样式](https://1c7.me/open-source-subtitle-file/)，他们组织的代表作是[计算机速成课](https://www.bilibili.com/video/av21376839/)，也超过了百万播放量。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/3.png)\n\n\n分别全选所有中英文字幕，设置中英文样式模板，再把字幕以开始时间排序。保存后字幕文件会自动转换为 ass 格式，之后打开会直接链接视频文件并加载字母样式。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/4.png)\n\n\n虽然这步的名字我起为“初翻”，但主要目的是生成中文时间轴，并调整样式，为下面的翻译做准备。事实上，简单的句子机翻表现得还不错，但几乎90%的句子都需要重新修改，所以在内容翻译上，这步只是一个辅助作用。\n## 翻译\n终于到了重头戏，这步难点不在工具的使用，而在于翻译。既要考虑遵于原意，又要让语言易懂，不那么生硬。特别是 Josh Hug 口语化严重，很多细节需要格外考量。另外断句也很繁琐，很多时候把一大段文字翻译完，发现会错意，又要重新逐句更改。\n还有一些细碎的注意事项，全部加起来让工作量成倍增加，也出乎了我的设想。同时背后的专业能力也要跟上，遇到不懂的地方还要去网上查询资料。但不管怎样，还是以质量为主。\n\n\n下面是翻译后的译文，可以将这几段轴与上一张图片机翻的作比较，哪一个过分生硬，哪一个一眼就能明白，显而易见。这还是开篇简单的几句话，涉及到专业的内容，机翻与手翻的差异会更加明显。\n![image.png](/assets/posts/subtitle-group-for-one-person/5.png)\n## 审片\n每一小集视频制作完成后，我都需要再整体带 ass 字幕看几遍视频，检查有没有字幕错误、不同步，时间轴是否有重合，错别字，翻译语句是否不通畅等等小问题。我其实不急于压制，也不急于发布，在制作完几个视频后，再回过头来审阅每个视频，保证错误率降到最低。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/6.png)\n\n\n## 压制\n压制即将原视频和制作好的字幕整合在一起，并设置码率等配置在保持一定清晰度的前提下大幅度压缩体积。小丸工具箱是很主流的选择，官网的网盘链接失效了，不过 B 站[创作中心](https://dl.hdslb.com/video-press/xiaowantoolsrev194.zip)有提供。\n\n\n为了保证视频的质量，x264和 CRF 等压缩选项都输出最高画质，之后便可以压缩成 MP4 格式，上传到 B 站。\n\n\n![image.png](/assets/posts/subtitle-group-for-one-person/7.png)\n# 关于课程\n大概是周一萌生了这个想法，周二周三调研相关工具后亲手制作了将近20分钟时长的视频，周四写下了这篇记录，所以还有很多不成熟的地方，我会随时修改。\n\n\n这件事情本源于我的心血来潮，真正去实践起来，花费的时间要比我预想的多得多。我还没有确定发布的进度，可能凑几周发布一次，也可能全制作好后一起发布，也可能永远搁置了。\n\n\n但值得庆幸的是，虽然包含很多重复的工作，我投入起来却干劲十足，甚至有点茶饭不思的激情。审片是整个流程中最开心的时刻，看着原版难以理解的视频，一步一步经过我手变得通俗易懂，我想这种成就感会推动我一直走下去，直至课程尽头。\n\n\n"}]